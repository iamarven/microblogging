services:

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - eureka-server
      - user-db
    networks:
      - app-net

  user-db:
    image: postgres:15-alpine
    container_name: user-db
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  profile-service:
    build:
      context: ./profile-service
      dockerfile: Dockerfile
    container_name: profile-service
    ports:
      - "8087:8087"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://profile-db:5432/profile_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - eureka-server
      - profile-db
      - redis
      - kafka
    networks:
      - app-net

  profile-db:
    image: postgres:15-alpine
    container_name: profile-db
    environment:
      POSTGRES_DB: profile_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5440:5432"
    volumes:
      - profile-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: post-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://post-db:5432/post_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - eureka-server
      - post-db
      - redis
      - kafka
    networks:
      - app-net

  post-db:
    image: postgres:15-alpine
    container_name: post-db
    environment:
      POSTGRES_DB: post_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - post-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  feed-service:
    build:
      context: ./feed-service
      dockerfile: Dockerfile
    container_name: feed-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://feed-db:5432/feed_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - eureka-server
      - feed-db
      - redis
      - kafka
    networks:
      - app-net

  feed-db:
    image: postgres:15-alpine
    container_name: feed-db
    environment:
      POSTGRES_DB: feed_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - feed-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  like-service:
    build:
      context: ./like-service
      dockerfile: Dockerfile
    container_name: like-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://like-db:5432/like_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - eureka-server
      - like-db
      - redis
      - kafka
    networks:
      - app-net

  like-db:
    image: postgres:15-alpine
    container_name: like-db
    environment:
      POSTGRES_DB: like_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    volumes:
      - like-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  comment-service:
    build:
      context: ./comment-service
      dockerfile: Dockerfile
    container_name: comment-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://comment-db:5432/comment_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - eureka-server
      - comment-db
      - redis
      - kafka
    networks:
      - app-net

  comment-db:
    image: postgres:15-alpine
    container_name: comment-db
    environment:
      POSTGRES_DB: comment_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5438:5432"
    volumes:
      - comment-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://notification-db:5432/notification_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - eureka-server
      - notification-db
      - kafka
    networks:
      - app-net

  notification-db:
    image: postgres:15-alpine
    container_name: notification-db
    environment:
      POSTGRES_DB: notification_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5437:5432"
    volumes:
      - notification-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  media-service:
    build:
      context: ./media-service
      dockerfile: Dockerfile
    container_name: media-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://media-db:5432/media_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - eureka-server
      - media-db
    networks:
      - app-net

  media-db:
    image: postgres:15-alpine
    container_name: media-db
    environment:
      POSTGRES_DB: media_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5439:5432"
    volumes:
      - media-db-data:/var/lib/postgresql/data
    networks:
      - app-net

  redis:
    image: redis:7.2.4
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - app-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  eureka-server:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - app-net

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "9000:9000"
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
    networks:
      - app-net

volumes:
  user-db-data:
  post-db-data:
  feed-db-data:
  like-db-data:
  notification-db-data:
  comment-db-data:
  media-db-data:
  profile-db-data:

networks:
  app-net:
    driver: bridge